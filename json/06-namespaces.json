{"tag":"document","content":[{"tag":"chapter","content":[{"tag":"text","content":[" Namespaces para organizar o código"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"quote","content":[{"tag":"text","content":["\"Don’t build frameworks; build small, composable libraries.\""]},{"tag":"text","content":["  -- Craig Andera\""]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Organizando o código com namespaces"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["namespace"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em Java, todo código que escrevemos fica encapsulado em uma "]},{"tag":"italic","content":[{"tag":"text","content":["classe"]}]},{"tag":"text","content":[". Em Clojure não temos os conceitos de classes e objetos, mas de uma forma parecida, todo nosso código fica dentro de algum "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" é um recurso que o Clojure utiliza para evitar colisões de funções e símbolos que tenham o mesmo nome."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["user"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando você abre o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", por padrão é exibido o texto "]},{"tag":"monospaced","content":[{"tag":"text","content":["user=>"]}]},{"tag":"text","content":[" imediatamente antes do cursor. Isso indica que, no momento, estamos no "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["user"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"img","content":[{"tag":"text","content":["images/capitulo_06/cap06_lein_repl.png \"REPL do Clojure\" w=70% label=lein-repl"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Toda função ou "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" que declararmos, será adicionado ao "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual. Vamos criar uma função qualquer chamada, adivinhe só, "]},{"tag":"monospaced","content":[{"tag":"text","content":["funcao-qualquer"]}]},{"tag":"text","content":[", para demonstrarmos essa dependência entre função e "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn funcao-qualquer [x]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (+ x 1))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #'user/funcao-qualquer"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["package"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["java.lang.String"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que foi criado um "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["user/funcao-qualquer"]}]},{"tag":"text","content":[". Chamamos esse nome completo, com "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" de "]},{"tag":"italic","content":[{"tag":"text","content":["nome qualificado"]}]},{"tag":"text","content":[", ou em inglês "]},{"tag":"italic","content":[{"tag":"text","content":["fully qualified name"]}]},{"tag":"text","content":[" ou "]},{"tag":"italic","content":[{"tag":"text","content":["FQN"]}]},{"tag":"text","content":[". Um nome completo de uma classe Java também é chamado de "]},{"tag":"italic","content":[{"tag":"text","content":["FQN"]}]},{"tag":"text","content":[", como acontece por exemplo com "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang.String"]}]},{"tag":"text","content":[", onde "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.lang"]}]},{"tag":"text","content":[" é um "]},{"tag":"italic","content":[{"tag":"text","content":["package"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[" é o nome da classe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso estejamos no mesmo "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" em que a função foi criada, basta chamar a função sem informar o nome completo:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(funcao-qualquer 3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 4"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["/"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ou podemos usar também o nome qualificado, separando o namespace do nome da função através do caracter "]},{"tag":"monospaced","content":[{"tag":"text","content":["/"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(user/funcao-qualquer 10)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 11"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["*ns*"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E como sabemos qual o nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual, além do prompt que aparece para digitarmos no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":["? Basta acessar o "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["*ns*"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["*ns*"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Namespace user>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Namespaces e arquivos"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Assim como também acontece no Java, onde o nome de um "]},{"tag":"italic","content":[{"tag":"text","content":["package"]}]},{"tag":"text","content":[" obedece a uma estrutura de diretórios em disco, um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" em Clojure também segue essa lógica."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos pegar um projeto Java para entender melhor como isso funciona."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Os livros da "]},{"tag":"italic","content":[{"tag":"text","content":["Casa do Código"]}]},{"tag":"text","content":[" são escritos utilizando uma "]},{"tag":"italic","content":[{"tag":"text","content":["linguagem de markup"]}]},{"tag":"text","content":[" chamada Tubaína. Sem entrar no mérito de como funciona e de como é a linguagem, vamos dar uma olhada em seu repositório no GitHub, que está em:"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["https://github.com/caelum/tubaina"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por conta da ferramenta utilizada para gerenciar dependências, os arquivos de código fonte ficam no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/main/java"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A classe principal do Tubaina chama-se "]},{"tag":"monospaced","content":[{"tag":"text","content":["br.com.caelum.tubaina.Tubaina"]}]},{"tag":"text","content":[", e fica no arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["br/com/caelum/tubaina/Tubaina.java"]}]},{"tag":"text","content":[". Note que existe uma relação direta entre o diretório em que o código fonte se encontra e o nome completo da classe. Pois é dessa forma hierárquica que o Java organiza seus pacotes. Cada item do nome do pacote é um diretório, e a classe é um arquivo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O Clojure trata os "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" de forma bem parecida, com exceção de que não temos aqui o conceito de classes."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos observar um projeto Clojure de verdade para ilustrar melhor."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["friend"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A biblioteca "]},{"tag":"monospaced","content":[{"tag":"text","content":["friend"]}]},{"tag":"text","content":[", desenvolvida originalmente por Chas Emerick, que permite que você utilize os serviços de autenticação de Google, Facebook ou qualquer outro que você precisar."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos dar uma olhada na organização do código fonte. O repositório do GitHub está em:"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["https://github.com/cemerick/friend"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nesse caso, devido ao fato do projeto estar usando "]},{"tag":"italic","content":[{"tag":"text","content":["Leiningen"]}]},{"tag":"text","content":[" para gerenciar suas dependências, o código fonte está no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" principal da biblioteca é "]},{"tag":"monospaced","content":[{"tag":"text","content":["cemerick.friend"]}]},{"tag":"text","content":[", e seu respectivo código fonte está no arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["cemerick/friend.clj"]}]},{"tag":"text","content":[". Muito parecido com o modo como o Java trabalha."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Adiante vamos aplicar isso na prática em nosso próprio projeto."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["O namespace por dentro"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por enquanto, vamos brincar com o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[". Inicie um "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" com o comando "]},{"tag":"monospaced","content":[{"tag":"text","content":["lein repl"]}]},{"tag":"text","content":[" para que possamos acompanhar os exemplos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Internamente, cada "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" mantém um mapa relacionando um símbolo a uma função do Clojure, classe ou membro de classe do Java. Esse símbolo nada mais é do que o nome do "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" que vamos utilizar no nosso código para invocar a função, classe ou membro de classe. Podemos chamar esse mapa de "]},{"tag":"italic","content":[{"tag":"text","content":["mapa de referências"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["+"]}]},{"tag":"index","content":[{"tag":"text","content":["clojure.core/+"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Por padrão, quando você usa o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[", o Clojure procura o símbolo "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" no mapa do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual. Não encontrando, a busca será feita nos "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" que foram referenciados através de "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":[", "]},{"tag":"monospaced","content":[{"tag":"text","content":["use"]}]},{"tag":"text","content":[" ou "]},{"tag":"monospaced","content":[{"tag":"text","content":["import"]}]},{"tag":"text","content":[", e então, no nosso exemplo, é retornada uma referência à função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/+"]}]},{"tag":"text","content":[". Se você criar uma função chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual, essa nova entrada no mapa passará a ter precedência sobre os outros, e na próxima chamada a "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[", você receberá a função que você acabou de criar."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["`"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos usar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["`"]}]},{"tag":"text","content":[", que a partir de um símbolo retorna com seu nome completo, incluindo o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[". Para conseguir isso, ele consulta o mapa de referências do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":[";; vamos acessar o operador + padrão"]},{"tag":"br","content":null},{"tag":"code-text","content":["`+"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.core/+"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; agora vamos criar uma função chamada +"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn + [a b]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (clojure.core/+ a b))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: + already refers to: #'clojure.core/+ in"]},{"tag":"br","content":null},{"tag":"code-text","content":[";  namespace: user, being replaced by: #'user/+"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; veja que o operador + agora aponta para a nova função"]},{"tag":"br","content":null},{"tag":"code-text","content":["`+"]},{"tag":"br","content":null},{"tag":"code-text","content":["; user/+"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; ainda podemos usar o + original através do nome completo"]},{"tag":"br","content":null},{"tag":"code-text","content":["`clojure.core/+"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.core/+"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que o Clojure nos avisa quando essa referência é sobrescrita. Normalmente fazer isso é uma má prática e deve ser evitada, mas para os nossos propósitos, serve bem para ilustrar como o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" funciona. Perceba também que continuamos acessando a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" original informando seu nome completo com o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" em que ela foi criada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O fato do "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" do nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" apontar para a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/+"]}]},{"tag":"text","content":[" ou para a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["user/+"]}]},{"tag":"text","content":[" é chamado de "]},{"tag":"italic","content":[{"tag":"text","content":["fazer referência a uma função"]}]},{"tag":"text","content":[", apontar para uma função, ou simplesmente "]},{"tag":"italic","content":[{"tag":"text","content":["refer"]}]},{"tag":"text","content":[" no original em inglês."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já o ato de criarmos um "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" que é adicionado no mapa do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" é chamado de "]},{"tag":"italic","content":[{"tag":"text","content":["intern"]}]},{"tag":"text","content":[" ou, em tradução livre, "]},{"tag":"italic","content":[{"tag":"text","content":["tornar o var interno ao nosso namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Internalizando e referenciando funções"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em algum momento você vai se perguntar como é que o Clojure sabe que o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" aponta para a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/+"]}]},{"tag":"text","content":[", sendo que você nem ao menos suspeitou que existisse um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Todas os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" declarados no "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[" são incluidos por padrão no seu namespace atual."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["ns"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo-06"]}]},{"tag":"text","content":[" para podermos brincar com essa característica. Para isso, vamos usar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[", que cria um novo "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" caso ele ainda não exista e muda o contexto atual para dentro dele."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; nil"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que o prompt mudou de "]},{"tag":"monospaced","content":[{"tag":"text","content":["user=>"]}]},{"tag":"text","content":[" para "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo-06=>"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos voltar ao operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[". Se você bem se lembra, ele é incluído automaticamente em nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[", assim como todo o resto de "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[". Quando tentamos criar nossa própria função "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[", recebemos uma mensagem de aviso."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E se quisermos criar nossa própria função "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[", ignorando as funções que já existem em "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":["?"]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["ns :refer-clojure"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Felizmente o Clojure permite que você controle os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[" que serão incluidos no nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" através da opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":refer-clojure"]}]},{"tag":"text","content":[" do operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos repetir o exemplo do operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[", mas dessa vez dizendo ao Clojure que não queremos a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/+"]}]},{"tag":"text","content":[" em nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["Reinicie o REPL"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Antes de executar cada um dos exemplos a seguir, onde for indicado, saia do REPL, entre novamente e só então digite o código. A chateação nesse caso é intencional e será explicada em breve."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso tenha curiosidade, experimente executar os exemplos sem reiniciar o REPL para ver as mensagens de erro que ocorrem."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (:refer-clojure :exclude [+]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["`+"]},{"tag":"br","content":null},{"tag":"code-text","content":["; capitulo-06/+"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note aqui aqui já não recebemos mais "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/+"]}]},{"tag":"text","content":[" como resposta. Isso indica que "]},{"tag":"monospaced","content":[{"tag":"text","content":["+"]}]},{"tag":"text","content":[" não está mapeado para o operador padrão de soma do Clojure."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn + [a b]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (clojure.core/+ a b))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; e não recebemos nenhum warning aqui"]},{"tag":"br","content":null},{"tag":"code-text","content":["(+ 1 2)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 3"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Apesar de não temos incluido a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/+"]}]},{"tag":"text","content":[" em nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[", note que podemos continuar acessando-a através de seu nome completo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Então você se pergunta por que motivos seria necessário criar uma função com o mesmo nome de outra que já existe na biblioteca padrão da linguagem?"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos escrever um código que substitua as letras de um texto por seus correspondentes "]},{"tag":"monospaced","content":[{"tag":"text","content":["1337"]}]},{"tag":"text","content":[". A escrita "]},{"tag":"monospaced","content":[{"tag":"text","content":["1337"]}]},{"tag":"text","content":[" é uma forma de se fazer passsar por hacker entre seus amigos do Facebook quando você tem menos de quinze anos. Basicamente trocam-se os caracteres normais de uma palavra por números e símbolos para que a linguagem pareça cifrada."]},{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["1337"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"monospaced","content":[{"tag":"text","content":["1337"]}]},{"tag":"text","content":[", lê-se 'lit', é o resultado da substituição das letras de "]},{"tag":"italic","content":[{"tag":"text","content":["leet"]}]},{"tag":"text","content":[", forma corrompida de se escrever "]},{"tag":"italic","content":[{"tag":"text","content":["elite"]}]},{"tag":"text","content":[". O termo é usado como sinônimo para algo ou alguém que seja bem visto num grupo de hackers"]},{"tag":"ref","content":[{"tag":"text","content":["leetspeak"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O termo pode ser usado também de forma irônica, dependendo do contexto."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["String.replace"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.core/replace"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No Java usaríamos o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["String.replace"]}]},{"tag":"text","content":[" para substituir caracteres dentro de um texto. No "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[" também temos uma função "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":[", mas ela não faz necessariamente o que estamos esperando."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(replace \"eu sou ráquer\" \"e\" \"3\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; ArityException Wrong number of args (3) passed to: "]},{"tag":"br","content":null},{"tag":"code-text","content":[";   core/replace  clojure.lang.AFn.throwArity (AFn."]},{"tag":"br","content":null},{"tag":"code-text","content":[";   java:429)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos ver o que essa função "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":[" faz."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(doc replace)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; -------------------------"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.core/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; ([smap coll])"]},{"tag":"br","content":null},{"tag":"code-text","content":[";   Given a map of replacement pairs and a vector/collection, "]},{"tag":"br","content":null},{"tag":"code-text","content":["; returns a vector/seq with any elements = a key in smap "]},{"tag":"br","content":null},{"tag":"code-text","content":["; replaced with the corresponding val in smap"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Traduzindo, a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/replace"]}]},{"tag":"text","content":[" espera receber como parâmetros um mapa com os valores a serem substituidos e uma coleção onde a substituição será executada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos passar um mapa substituindo os caracteres que encontrarmos com os equivalentes "]},{"tag":"monospaced","content":[{"tag":"text","content":["1337"]}]},{"tag":"text","content":[". Existem muito mais combinações, mas para o que precisamos isso vai ser suficiente."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["user=> (replace {\\a \\4, \\e \\3, \\l \\1, \\o \\0} \"eu sou raquer\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; (\\3 \\u \\space \\s \\0 \\u \\space \\r \\4 \\q \\u \\3 \\r)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Podemos converter a lista que obtivemos como resultado de volta para a forma de texto."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(->> \"eu sou raquer\" "]},{"tag":"br","content":null},{"tag":"code-text","content":["     (replace {\\a \\4, \\e \\3, \\l \\1, \\o \\0}) "]},{"tag":"br","content":null},{"tag":"code-text","content":["     (apply str))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u s0u r4qu3r\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Funciona, mas é feio. Tivemos que passar um mapa, que não é lá a coisa mais legível que você vai encontrar, e depois converter o resultado de volta para texto. Será que existe uma forma mais simples de resolvermos isso?"]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.string/replace"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Existe sim, dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string"]}]},{"tag":"text","content":[". O problema é que a função também se chama "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":[", então temos que lançar mão de uma das diferentes formas de utilizá-la sem que isso crie uma bagunça no nosso código."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A forma básica de utilizarmos a função é usarmos seu nome completo."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(clojure.string/replace \"eu sou raquer\" \\e \\3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u sou raqu3r\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ficou melhor, já que agora trabalhamos com texto o tempo todo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para substituirmos as quatro combinações, podemos fazer da seguinte forma:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(-> \"eu sou raquer\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    (clojure.string/replace \\a \\4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (clojure.string/replace \\e \\3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (clojure.string/replace \\l \\1)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (clojure.string/replace \\o \\0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u s0u r4qu3r\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora o problema aqui é termos que escrever "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string/replace"]}]},{"tag":"text","content":[" a cada nova combinação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E se fizermos o "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":[" apontar para "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string/replace"]}]},{"tag":"text","content":[" ao invés de "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/replace"]}]},{"tag":"text","content":["?"]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["ns :use"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos usar então a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":use"]}]},{"tag":"text","content":[" no operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[" para referenciarmos as funções de "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string"]}]},{"tag":"text","content":[" em nosso namespace."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["`replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.core/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["   (:use [clojure.string]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: reverse already refers to: #'clojure.core/reverse "]},{"tag":"br","content":null},{"tag":"code-text","content":[";   in namespace: capitulo-06, being replaced by: #'clojure."]},{"tag":"br","content":null},{"tag":"code-text","content":[";   string/reverse"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: replace already refers to: #'clojure.core/replace "]},{"tag":"br","content":null},{"tag":"code-text","content":[";   in namespace: capitulo-06, being replaced by: #'clojure."]},{"tag":"br","content":null},{"tag":"code-text","content":[";   string/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["`replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.string/replace"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ops, sobrescrevemos coisas a mais. E ainda por cima temos que conviver com as mensagens de aviso do Clojure."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(-> \"eu sou raquer\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\a \\4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\e \\3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\l \\1)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\o \\0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u s0u r4qu3r\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Funcionou, mas seu código vai ficar emitindo avisos e sobreescrevendo funções que não precisamos, como aconteceu com "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.core/reverse"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["clojure.string/reverse"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos então unir o que aprendemos com "]},{"tag":"monospaced","content":[{"tag":"text","content":["refer-clojure"]}]},{"tag":"text","content":[" e deixar de referenciar as funções "]},{"tag":"monospaced","content":[{"tag":"text","content":["reverse"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["   (:refer-clojure :exclude [reverse replace])"]},{"tag":"br","content":null},{"tag":"code-text","content":["   (:use [clojure.string]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; sem nenhuma mensagem de aviso"]},{"tag":"br","content":null},{"tag":"code-text","content":["(-> \"eu sou raquer\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\a \\4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\e \\3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\l \\1)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace \\o \\0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u s0u r4qu3r\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Muito bom, agora não o Clojure não emitiu nenhuma mensagem de aviso e o nosso código funcionou."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mas, pense comigo. Toda vez que você precisar de uma função de um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" qualquer você terá que referenciar tudo o que existe nesse "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" e excluir as funções de mesmo nome de "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":["? Não me parece prático nem inteligente."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro vamos limitar as referências para usarmos apenas a função que precisamos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["   (:use [clojure.string :only [replace]]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: replace already refers to: #'clojure.core/replace "]},{"tag":"br","content":null},{"tag":"code-text","content":[";   in namespace: capitulo-06, being replaced by: #'clojure."]},{"tag":"br","content":null},{"tag":"code-text","content":[";   string/replace"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora estamos referenciando apenas a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":[", mas o conflito continua."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Existem discussões sobre tornar a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":use"]}]},{"tag":"text","content":[" obsoleta pelo fato dela, por padrão, referenciar todo o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" de uma única vez, causando conflitos de nomes e lentidão. Como o processo de "]},{"tag":"italic","content":[{"tag":"text","content":["internalizar"]}]},{"tag":"text","content":[" os novos "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" não é barato, você pode notar uma lentidão ao iniciar sua aplicação. Já trabalhei em projetos em que "]},{"tag":"monospaced","content":[{"tag":"text","content":[":use"]}]},{"tag":"text","content":[" foi substituido por "]},{"tag":"monospaced","content":[{"tag":"text","content":[":require"]}]},{"tag":"text","content":[" e a aplicação passou a levar muito menos tempo para ser iniciada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Então o leitor mais atento se pergunta, já que a entrada no mapa do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" é apenas um apelido, não podemos simplesmente referenciar a função que tem o nome repetido com um apelido diferente?"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Felizmente, podemos sim. Vamos fazer isso usando "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["   (:use [clojure.string :only [replace]"]},{"tag":"br","content":null},{"tag":"code-text","content":["                         :rename {replace replace-text}]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; sem nenhuma mensagem de aviso"]},{"tag":"br","content":null},{"tag":"code-text","content":["(-> \"eu sou raquer\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace-text \\a \\4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace-text \\e \\3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace-text \\l \\1)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (replace-text \\o \\0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u s0u r4qu3r\""]},{"tag":"br","content":null},{"tag":"code-text","content":["`replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.core/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["`replace-text"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.string/replace"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A vantagem dessa abordagem é que não precisamos mexer com "]},{"tag":"monospaced","content":[{"tag":"text","content":[":refer-clojure"]}]},{"tag":"text","content":[" e não temos nenhuma mensagem de aviso sujando a saída do código. A desvantagem é que cada programador em cada "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" pode criar um apelido diferente para uma mesma função, tornando o código mais difícil de entender."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["ns :require"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos alterar novamente nosso código para usar uma outra opção chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":[":require"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A principal diferença de "]},{"tag":"monospaced","content":[{"tag":"text","content":[":require"]}]},{"tag":"text","content":[" é que os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" que está sendo referenciado não são internalizados por padrão. De quebra, você pode criar um apelido para o namespace, tornando seu código mais expressivo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos aprender a trabalhar das duas formas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro, vamos substituir "]},{"tag":"monospaced","content":[{"tag":"text","content":[":use"]}]},{"tag":"text","content":[" por "]},{"tag":"monospaced","content":[{"tag":"text","content":[":require"]}]},{"tag":"text","content":[" e vamos receber o mesmo aviso de conflito de nomes."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:require [clojure.string :refer [replace]]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: replace already refers to: #'clojure.core/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":[";  in namespace: capitulo-06, being replaced by: #'clojure."]},{"tag":"br","content":null},{"tag":"code-text","content":[";  string/replace"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que usamos a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":refer"]}]},{"tag":"text","content":[" para informar a função que queremos referenciar."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Na segunda forma simplesmente atribuimos um apelido a "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string"]}]},{"tag":"text","content":[", resolvendo de uma vez por todas o problema da colisão de nomes."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:require [clojure.string :as str]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; sem nenhuma mensagem de aviso"]},{"tag":"br","content":null},{"tag":"code-text","content":["(-> \"eu sou raquer\""]},{"tag":"br","content":null},{"tag":"code-text","content":["    (str/replace \\a \\4)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (str/replace \\e \\3)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (str/replace \\l \\1)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (str/replace \\o \\0))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u s0u r4qu3r\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Funcionou, não tivemos conflitos de nomes e o código não ficou tão grande quanto no primeiro exemplo. Essa é a forma mais aceita entre os desenvolvedores Clojure, e é a que você vai acabar encontrando em projetos por aí."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para finalizar, vamos usar uma característica da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string/replace"]}]},{"tag":"text","content":[" para que ela fique ainda menor. O segundo parâmetro pode ser um caracter, um texto ou uma expressão regular. Vamos usar uma expressão regular para capturar todas as opções de letras que vamos substituir. Já o terceiro parâmetro pode ser um texto ou um mapa, como já vimos em "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/replace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:require [clojure.string :as str]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(str/replace \"eu sou um raquer\" "]},{"tag":"br","content":null},{"tag":"code-text","content":["             #\"a|e|l|o\" "]},{"tag":"br","content":null},{"tag":"code-text","content":["             {\"a\" \"4\", \"e\" \"3\", \"l\" \"1\", \"o\" \"0\"})"]},{"tag":"br","content":null},{"tag":"code-text","content":["; \"3u s0u um r4qu3r\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Pronto. Temos o nosso código sem conflito de nomes, sem a necessidade de informarmos o nome completo do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" e ainda por cima transformando o nosso texto em "]},{"tag":"monospaced","content":[{"tag":"text","content":["1337"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Mas é um tal de reiniciar o REPL..."]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando você usa o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[" com um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" que ainda não existe, ele é criado com o tal mapa contendo os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" que referenciam funções de outros "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[". Quando você usa o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[" pela com um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" que já existe, é utilizado o mesmo mapa de referências que também já existe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se você usou "]},{"tag":"monospaced","content":[{"tag":"text","content":[":refer-clojure"]}]},{"tag":"text","content":[" para deixar de referenciar algum "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" da biblioteca padrão, esse "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" não vai ser carregado automaticamente e você terá que fazer isso explicitamente. "]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se você já referenciou um "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" e tenta fazer isso de novo com o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" que já existe, o Clojure irá lançar uma exceção dizendo que você está fazendo algo que já foi feito antes."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; Reinicie o REPL"]},{"tag":"br","content":null},{"tag":"code-text","content":["; vamos declarar o namespace a primeira vez"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:require [clojure.string :refer [replace]]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: replace already refers to: #'clojure.core/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":[";  in namespace: capitulo-06, being replaced by: #'clojure."]},{"tag":"br","content":null},{"tag":"code-text","content":[";  string/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Sem reiniciar o REPL, vamos declarar o namespace de novo"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06 "]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:require [clojure.string :refer [replace]]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; IllegalStateException replace already refers to: "]},{"tag":"br","content":null},{"tag":"code-text","content":["; #'clojure.string/replace in namespace: capitulo-06  "]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.lang.Namespace.warnOrFailOnReplace (Namespace.java:88)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["É esperado que isso aconteça, uma vez que o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[" deve ser usado apenas uma vez em cada arquivo, logo no início, para que o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" seja criado uma única vez."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Só que, quando utilizamos o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", isso se torna uma limitação um tanto irritante. Muitas vezes precisamos recarregar um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" após alterá-lo, e sendo o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" um ambiente tão dinâmico, esse tipo de limitação acaba nos atrapalhando."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O que fazer então?"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mais uma vez, existe solução para esse problema."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando estamos trabalhando no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" deve ser criado apenas uma vez, se ele já não existir, e devemos usar operadores diferentes de "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[" para fazer referência a funções de outras bibliotecas ou de outros pontos da nossa aplicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos reescrever nossos exemplos sem ter que reiniciar o REPL e usando "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[" apenas uma vez."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mas antes, saia do "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" e entre novamente. Vai ser só dessa vez, eu prometo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro, vamos criar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo-06"]}]},{"tag":"text","content":[". Nada de especial até aqui. Em seguida vamos dar uma olhada na função "]},{"tag":"monospaced","content":[{"tag":"text","content":["replace"]}]},{"tag":"text","content":[" para saber qual está sendo referenciada no momento."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06)"]},{"tag":"br","content":null},{"tag":"code-text","content":["`replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.core/replace"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora vamos referenciar todo o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string"]}]},{"tag":"text","content":[" em nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(use 'clojure.string)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: reverse already refers to: #'clojure.core/reverse"]},{"tag":"br","content":null},{"tag":"code-text","content":[";   in namespace: capitulo-06, being replaced by: #'clojure."]},{"tag":"br","content":null},{"tag":"code-text","content":[";   string/reverse"]},{"tag":"br","content":null},{"tag":"code-text","content":["; WARNING: replace already refers to: #'clojure.core/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":[";   in namespace: capitulo-06, being replaced by: #'clojure."]},{"tag":"br","content":null},{"tag":"code-text","content":[";   string/replace"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Tivemos aqui a mesma colisão de nomes. Vamos então referenciar apenas a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string/replace"]}]},{"tag":"text","content":[", dizendo que não queremos referenciar "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core/replace"]}]},{"tag":"text","content":[", evitando a colisão de nomes."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["remove-ns"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ao invés de reiniciarmos o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", vamos limpar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" da memória através da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["remove-ns"]}]},{"tag":"text","content":[" e passar para o próximo passo."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["; voltamos para o user apenas para "]},{"tag":"br","content":null},{"tag":"code-text","content":["; evitar um monte de mensagens de erro chatas"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns user)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(remove-ns 'capitulo_06)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #<Namespace capitulo-06>"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Pronto, você tem um "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" limpinho e pronto para ser bagunçado a vontade."]},{"tag":"br","content":null}]},{"tag":"img","content":[{"tag":"text","content":["images/capitulo_06/cap06_branch.png \"Cuidado ao apagar o namespace atual\" w=40%"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Então você está acompanhando os exemplos do livro, tudo vai funcionando direitinho e você resolve se levantar um pouco para tomar uma água ou um café. Aí, pensando nas coisas que você acabou de aprender, você se pergunta: "]},{"tag":"italic","content":[{"tag":"text","content":["\"Peraí, é sério mesmo que eu tenho que excluir todo um namespace só para sumir com uma ou duas referências? Será que Clojure tem tão pouco recurso assim para eu ter que apelar para essa violência toda?\""]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["ns-unmap"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Clojure é paz e amor, você pode resolver as coisas sem violência. Sem violência e com alguma função bacana que resolva nossos problemas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A função da vez se chama "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-unmap"]}]},{"tag":"text","content":[". Com ela podemos excluir uma referência do mapa do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06)"]},{"tag":"br","content":null},{"tag":"code-text","content":["`replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; clojure.core/replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns-unmap *ns* (symbol \"replace\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["`replace"]},{"tag":"br","content":null},{"tag":"code-text","content":["; capitulo-06/replace"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-unmap"]}]},{"tag":"text","content":[" recebeu "]},{"tag":"monospaced","content":[{"tag":"text","content":["*ns*"]}]},{"tag":"text","content":[", que contém o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual e um símbolo contendo o nome da função a ser removida do mapa de referências."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["require"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" não é uma boa utilizar "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":[" num mesmo "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" mais de uma vez, por todos os motivos que já vimos. Por conta disso existem alternativas para as opções "]},{"tag":"monospaced","content":[{"tag":"text","content":[":require"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":[":use"]}]},{"tag":"text","content":[" que são, respectivamente, "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["use"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para referenciar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[", podemos usar diretamente o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":[":"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["As duas formas a seguir são válidas"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(require '[clojure.string :refer [replace]])"]},{"tag":"br","content":null},{"tag":"code-text","content":["(require '(clojure [string :refer [split]]))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso você precise referenciar mais de um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" ao mesmo tempo, você pode fazer da seguintes forma:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(require '(clojure [set :as set]"]},{"tag":"br","content":null},{"tag":"code-text","content":["                   [string :refer [split]]))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Assim você está criando um "]},{"tag":"italic","content":[{"tag":"text","content":["alias"]}]},{"tag":"text","content":[" para "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.set"]}]},{"tag":"text","content":[" e está internalizando o método "]},{"tag":"monospaced","content":[{"tag":"text","content":["split"]}]},{"tag":"text","content":[" do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string"]}]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ou caso queira apenas referenciar os "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[", existem ainda mais formas possíveis."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(require 'clojure.string "]},{"tag":"br","content":null},{"tag":"code-text","content":["         'clojure.set)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(require '(clojure string set))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Particularmente sou da opinião de que muitas opções sem padronização para fazer exatamente a mesma coisa leva a erros, inconsistência no código e dificuldade em dominar a ferramenta. Escolha uma forma, ou combine com sua equipe qual forma será usada, e se atenha a ela."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso você altere o conteúdo do seu "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual fora do "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", você pode recarregá-lo utilizando a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":reload-all"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Isso é útil quando você, por exemplo, atualiza o código fonte de uma função, salva o arquivo e quer que essa alteração seja refletida no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" sem que seja necessário fechá-lo e abrir de novo. É uma alternativa interessante para quando seu editor de textos não tem uma boa integração com o "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", como é o caso do "]},{"tag":"italic","content":[{"tag":"text","content":["Sublime"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(use capitulo-06 :reload-all)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Em editores que tem uma boa integração, como é o caso de "]},{"tag":"italic","content":[{"tag":"text","content":["Emacs"]}]},{"tag":"text","content":[" e "]},{"tag":"italic","content":[{"tag":"text","content":["ViM"]}]},{"tag":"text","content":[", você pode simplesmente executar seu código modificado dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" e fica tudo certo."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Finalmente, você pode ver em detalhes o que está acontecendo ao utilizar a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":verbose"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(require '[clojure.string :as string] :verbose)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; (clojure.core/in-ns 'capitulo-06)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; (clojure.core/alias 'string 'clojure.string)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["in-ns"]}]},{"tag":"index","content":[{"tag":"text","content":["alias"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nesse exemplo, "]},{"tag":"monospaced","content":[{"tag":"text","content":["in-ns"]}]},{"tag":"text","content":[" informa ao Clojure que o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual é "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo-06"]}]},{"tag":"text","content":[". Em seguida é criado um "]},{"tag":"italic","content":[{"tag":"text","content":["alias"]}]},{"tag":"text","content":[", um apelido, chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["string"]}]},{"tag":"text","content":[" para o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.string"]}]},{"tag":"text","content":[", que é exatamente o que a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":as"]}]},{"tag":"text","content":[" faz."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(use 'clojure.set)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; (clojure.core/in-ns 'capitulo-06)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; (clojure.core/refer 'clojure.set)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já nesse exemplo, é usado o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["refer"]}]},{"tag":"text","content":[" para referenciar todos os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" públicos do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.set"]}]},{"tag":"text","content":[" para dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" atual."]},{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Importando código Java"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para utilizar uma classe já existente do Java na sua aplicação, o funcionamento é bem parecido com o uso de "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Considerando que você já tenha adicionado a biblioteca Java no "]},{"tag":"italic","content":[{"tag":"text","content":["classpath"]}]},{"tag":"text","content":[" da sua aplicação, o que é feito geralmente informando-a como dependência no "]},{"tag":"italic","content":[{"tag":"text","content":["Leiningen"]}]},{"tag":"text","content":[" ou no "]},{"tag":"italic","content":[{"tag":"text","content":["Maven"]}]},{"tag":"text","content":[", existem duas formas de informarmos ao Clojure que vamos usar uma classe Java em nosso namespace."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Enquanto em Java é permitido utilizar um operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["*"]}]},{"tag":"text","content":[" para fazer referência a todas as classes que estão dentro de um "]},{"tag":"italic","content":[{"tag":"text","content":["package"]}]},{"tag":"text","content":[" específico, no Clojure temos que informar um a um."]},{"tag":"br","content":null}]},{"tag":"code","content":["java",{"tag":"br","content":null},{"tag":"code-text","content":["// No Java você faria isso"]},{"tag":"br","content":null},{"tag":"code-text","content":["import java.sql.*;"]},{"tag":"br","content":null},{"tag":"code-text","content":["import java.util.*;"]},{"tag":"br","content":null},{"tag":"code-text","content":["// ou isso"]},{"tag":"br","content":null},{"tag":"code-text","content":["import java.sql.Connection;"]},{"tag":"br","content":null},{"tag":"code-text","content":["import java.util.Date;"]},{"tag":"br","content":null},{"tag":"code-text","content":["import java.util.Calendar;"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A primeira forma é recomendada no código fonte e utiliza a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":import"]}]},{"tag":"text","content":[" no operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":[";; tanto faz uma forma"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:import [java.sql Connection]"]},{"tag":"br","content":null},{"tag":"code-text","content":["           [java.util Date Calendar]))"]},{"tag":"br","content":null},{"tag":"code-text","content":[";; como outra"]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:import (java.sql Connection)"]},{"tag":"br","content":null},{"tag":"code-text","content":["           (java.util Date Calendar)))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(Date.)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #inst \"2014-10-23T18:31:59.278-00:00\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Instant literals"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["Instant literals"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esse "]},{"tag":"monospaced","content":[{"tag":"text","content":["#inst"]}]},{"tag":"text","content":[" antes da data é um "]},{"tag":"italic","content":[{"tag":"text","content":["instant literal"]}]},{"tag":"text","content":[", um recurso adicionado na versão "]},{"tag":"italic","content":[{"tag":"text","content":["1.4"]}]},{"tag":"text","content":[" do Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Sempre que você utilizar "]},{"tag":"monospaced","content":[{"tag":"text","content":["#inst"]}]},{"tag":"text","content":[" seguido de uma data em formato texto, o próprio "]},{"tag":"italic","content":[{"tag":"text","content":["reader"]}]},{"tag":"text","content":[" do Clojure vai transformar para o tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["java.util.Date"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["#inst \"2014-10-23T12:00\""]},{"tag":"br","content":null},{"tag":"code-text","content":["; #inst \"2014-10-23T12:00:00.000-00:00\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(type #inst \"2014-10-23T12:00\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; java.util.Date"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["import"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A outra forma é recomendada para o uso dentro do "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[", e não é uma boa prática para se adicionar no código fonte da sua aplicação, consiste em utilizar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["import"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(import '(java.sql Connection)"]},{"tag":"br","content":null},{"tag":"code-text","content":["        '(java.util Date Calendar)))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["É possível também referenciar classes do Java sem utilizar a opção "]},{"tag":"monospaced","content":[{"tag":"text","content":[":import"]}]},{"tag":"text","content":[", mas você terá que usar o nome qualificado da classe para isso."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(java.util.Calendar/getInstance)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; #inst \"2014-10-24T00:06:33.145-02:00\""]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O mesmo acontece se você utilizar o nome qualificado de uma função ao invés de referenciar seu namespace com "]},{"tag":"monospaced","content":[{"tag":"text","content":["require"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(clojure.string/split \"Sabe, tchurururu\" #\" \")"]},{"tag":"br","content":null},{"tag":"code-text","content":["; [\"Sabe,\" \"tchurururu\"]"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Funções públicas e privadas"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No capítulo "]},{"tag":"ref-label","content":[{"tag":"text","content":["capitulo-funcoes"]}]},{"tag":"text","content":[" nós aprendemos a criar uma função utilizando o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["defn"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Toda função criada com "]},{"tag":"monospaced","content":[{"tag":"text","content":["defn"]}]},{"tag":"text","content":[" ou "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" criado com "]},{"tag":"monospaced","content":[{"tag":"text","content":["def"]}]},{"tag":"text","content":[" fica visível ao referenciarmos o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" onde ela se encontra."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O problema é que é bem comum criarmos funções auxiliares ou "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" contendo valores que devem ser acessadas apenas dentro do próprio "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para evitar o uso indiscriminado dessas funções auxiliares, que deveriam ficar escondidas do resto do sistema, ou de valores armazenados em "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" que não devem ser modificados em outros lugares da aplicação, existe a possibilidade de criarmos membros privados."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O conceito de "]},{"tag":"italic","content":[{"tag":"text","content":["privacidade"]}]},{"tag":"text","content":[" no Clojure é tão estrito quanto no Java, onde você só pode acessar um membro privado de outra classe através de introspecção e metaprogramação"]},{"tag":"ref","content":[{"tag":"text","content":["jvm8-spec"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando você marca um membro como privado, você está sinalizando ao Clojure que aquele "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" ou função não deve ser referenciado ou executado por outro "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["O Pensador Profundo"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O escritor Douglas Adams, no obrigatório "]},{"tag":"italic","content":[{"tag":"text","content":["Guia do Mochileiro das Galáxias"]}]},{"tag":"ref","content":[{"tag":"text","content":["thhgttg"]}]},{"tag":"text","content":[", conta a história de seres ultrainteligentes que criaram um computador que calculasse "]},{"tag":"italic","content":[{"tag":"text","content":["A Resposta para a Questão Fundamental sobre a Vida, o Universo e Tudo o Mais"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esse computador, do tamanho de uma cidade pequena, foi batizado de "]},{"tag":"italic","content":[{"tag":"text","content":["Pensador Profundo"]}]},{"tag":"text","content":[" e, ao ser ativado, pediu sete milhões e meio de anos para pensar. Passado esse tempo, para surpresa geral, o "]},{"tag":"italic","content":[{"tag":"text","content":["Pensador Profundo"]}]},{"tag":"text","content":[" apresentou a Resposta como sendo "]},{"tag":"italic","content":[{"tag":"text","content":["42"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para quem não estava envolvido na criação do superultracomputador, não é relevante como ele chegou à resposta nem como ele funciona por dentro. A mesma ideia se aplica quando resolvemos "]},{"tag":"italic","content":[{"tag":"text","content":["esconder"]}]},{"tag":"text","content":[" funções ou valores dentro de um namespace."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" para simular o processamento do Pensador Profundo. Ao invés de esperarmos sete milhões e meio de anos, vamos acelerar um pouco e esperar apenas dois segundos. Esse "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" vai se chamar "]},{"tag":"monospaced","content":[{"tag":"text","content":["pensador-profundo"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" privado contendo um valor numérico. Para marcarmos um "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" como privado, precisamos utilizar metadados, já que não existe um "]},{"tag":"monospaced","content":[{"tag":"text","content":["def-"]}]},{"tag":"text","content":[" na biblioteca padrão do Clojure."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns pensador-profundo)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(def ^:private vinte-e-um 21)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O metadado "]},{"tag":"monospaced","content":[{"tag":"text","content":["^:private"]}]},{"tag":"text","content":[" é a forma curta para "]},{"tag":"monospaced","content":[{"tag":"text","content":["^{:private true}"]}]},{"tag":"text","content":[". Prefira a forma curta."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["defn"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["defn-"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar também uma função privada chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["dobro"]}]},{"tag":"text","content":[", e para isso vamos usar a forma "]},{"tag":"monospaced","content":[{"tag":"text","content":["defn-"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn- dobro [valor] (* 2 valor))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Finalmente, vamos criar a função que calcula a Resposta Para a Pergunta Fundamental, em maiúsculas mesmo, porque a coisa é séria."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn a-resposta []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (Thread/sleep 2000)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (dobro vinte-e-um))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(a-resposta)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; 42"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que "]},{"tag":"monospaced","content":[{"tag":"text","content":["a-resposta"]}]},{"tag":"text","content":[" foi declarada usando "]},{"tag":"monospaced","content":[{"tag":"text","content":["defn"]}]},{"tag":"text","content":[", sem hífen, e trata-se de uma função pública. A função privada "]},{"tag":"monospaced","content":[{"tag":"text","content":["dobro"]}]},{"tag":"text","content":[" foi declarada através de "]},{"tag":"monospaced","content":[{"tag":"text","content":["defn-"]}]},{"tag":"text","content":[", com hífen."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora nós temos um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["pensador-profundo"]}]},{"tag":"text","content":[" com dois membros privados, o "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["vinte-e-um"]}]},{"tag":"text","content":[" e a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["dobro"]}]},{"tag":"text","content":[", e um membro público."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos voltar ao nosso velho conhecido "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["capitulo-06"]}]},{"tag":"text","content":[" para podermos utilizar a biblioteca do Pensador Profundo."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns capitulo-06"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:require [pensador-profundo [:as pp]]))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(println \"A resposta fundamental é\" (pp/a-resposta))"]},{"tag":"br","content":null},{"tag":"code-text","content":["; A resposta fundamental é 42"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Até aqui não vimos nenhuma novidade. Referenciamos o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["pensador-profundo"]}]},{"tag":"text","content":[" e o chamamos de "]},{"tag":"monospaced","content":[{"tag":"text","content":["pp"]}]},{"tag":"text","content":[". Então chamamos a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["a-resposta"]}]},{"tag":"text","content":[" e exibimos a mensagem na tela."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Porém, se tentarmos forçar a barra e exibir os membros "]},{"tag":"monospaced","content":[{"tag":"text","content":["vinte-e-um"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["dobro"]}]},{"tag":"text","content":[", seremos presenteados com uma simpática e informativa mensagem de erro:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["pp/vinte-e-um"]},{"tag":"br","content":null},{"tag":"code-text","content":["; CompilerException java.lang.IllegalStateException:"]},{"tag":"br","content":null},{"tag":"code-text","content":[";  var: pp/vinte-e-um is not public, "]},{"tag":"br","content":null},{"tag":"code-text","content":["; compiling:(NO_SOURCE_PATH:0:0)"]},{"tag":"br","content":null},{"tag":"code-text","content":["(pp/dobro)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; CompilerExcption java.lang.IllegalStateException:"]},{"tag":"br","content":null},{"tag":"code-text","content":[";  var: #'pensador-profundo/dobro is not public, "]},{"tag":"br","content":null},{"tag":"code-text","content":[";  compiling:(NO_SOURCE_PATH:1:1)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que a mensagem não diz que "]},{"tag":"monospaced","content":[{"tag":"text","content":["vinte-e-um"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["dobro"]}]},{"tag":"text","content":[" não existem, mas sim que eles não são públicos."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Mesmo que você informe o nome qualificado do membro, a mensagem será a mesma."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["pensador-profundo/vinte-e-um"]},{"tag":"br","content":null},{"tag":"code-text","content":["; blablabla pensador-profundo/vinte-e-um is not public, etc etc"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"section","content":[{"tag":"text","content":["Juntando tudo num projeto"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos aproveitar a oportunidade e encerrar o capítulo de uma forma bem interessante. Vamos desenvolver um pequeno projeto, do início ao fim, utilizando tudo o que aprendemos até aqui."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar uma pequena aplicação que retorna a documentação dos membros do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[" e vamos chamá-la de "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para isso, vamos utilizar quatro "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[". O principal, chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp.core"]}]},{"tag":"text","content":[", contém a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["-main"]}]},{"tag":"text","content":[", executada ao iniciarmos a aplicação, e também vai invocar as funções dos demais "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[". "]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A ideia é que somente este "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" tenha conhecimento dos demais, fazendo com que a nossa aplicação tenha baixo acoplamento, permitindo que possamos substituir toda a implementação de um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" sem afetar o restante da aplicação, desde que a parte pública do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" alterado não seja modificada."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Os outros três "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" vão cuidar de áreas bem específicas da aplicação. É interessante que você agrupe as funções de acordo com suas utilidades e responsabilidades. São eles:"]},{"tag":"br","content":null}]},{"tag":"list","content":[{"tag":"br","content":null},{"tag":"text","content":["  * "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp.ns-data"]}]},{"tag":"text","content":[" é responsável por extrair a documentação dos membros de "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[" e nos retornar as informações como uma estrutura de dados. Assim podemos fazer o que bem entender com os dados que são retornados."]},{"tag":"br","content":null},{"tag":"text","content":["  * "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp.db"]}]},{"tag":"text","content":[" é responsável pela emulação de um banco de dados onde a documentação de cada membro pode ser incluída e acessada. Tente implementar também formas de atualizar os dados e excluir informação."]},{"tag":"br","content":null},{"tag":"text","content":["  * "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp.ui"]}]},{"tag":"text","content":[" é responsável pela interface com o usuário. No nosso exemplo usaremos apenas texto, mas fique a vontade para melhorar a interface da forma que achar melhor."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Primeiro vamos criar o projeto "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp"]}]},{"tag":"text","content":[" através do comando "]},{"tag":"monospaced","content":[{"tag":"text","content":["lein new"]}]},{"tag":"text","content":[" na linha de comando do seu sistema operacional preferido."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["lein new app cljhelp"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Dessa vez estamos utilizando uma opção nova antes do nome da aplicação. Esse "]},{"tag":"monospaced","content":[{"tag":"text","content":["app"]}]},{"tag":"text","content":[" é um "]},{"tag":"italic","content":[{"tag":"text","content":["template"]}]},{"tag":"text","content":[", uma receita pronta, para criarmos uma aplicação com Clojure. Dessa forma o próprio "]},{"tag":"italic","content":[{"tag":"text","content":["Leiningen"]}]},{"tag":"text","content":[" cria uma função "]},{"tag":"monospaced","content":[{"tag":"text","content":["-main"]}]},{"tag":"text","content":[" e adiciona as configurações necessárias no arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["project.clj"]}]},{"tag":"text","content":[" para que nossa aplicação seja executável. Experimente editá-lo para ver as opções que foram adicionadas."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Extraindo os dados"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O primeiro passo da aplicação é extrair o texto de documentação de cada "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" público de "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[". Em seguida vamos retornar toda essa documentação em uma "]},{"tag":"italic","content":[{"tag":"text","content":["lazy sequence"]}]},{"tag":"text","content":[", que será gravada num "]},{"tag":"italic","content":[{"tag":"text","content":["banco de dados"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Bom, não um banco de dados de verdade, mas um arremedo de banco em memória que vai nos fornecer operações básicas como gravar e pesquisar. Fica como desafio a você aumentar a quantidade de recursos dessa nossa tentativa de banco."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A parte de extração dos dados vai ficar dentro do namespace "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp.ns-data"]}]},{"tag":"text","content":[". O nome "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-data"]}]},{"tag":"text","content":[" foi escolhido por indicar que estamos lidando com os "]},{"tag":"italic","content":[{"tag":"text","content":["dados do namespace"]}]},{"tag":"text","content":[", e também porque eu quis colocar esse separador "]},{"tag":"monospaced","content":[{"tag":"text","content":["-"]}]},{"tag":"text","content":[" de propósito, para aprendermos uma pegadinha do Clojure."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Dentro do diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/cljhelp"]}]},{"tag":"text","content":[" da nossa aplicação, vamos criar um arquivo chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns_data.clj"]}]},{"tag":"text","content":[" e vamos declarar o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" da forma a seguir:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns cljhelp.ns-data)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note as partes do nome do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[". Temos um diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src"]}]},{"tag":"text","content":[", que é o diretório raiz de todo o nosso código fonte, e dentro dele temos um diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp"]}]},{"tag":"text","content":[", que não por coincidência é o nome do nosso projeto. Todos os arquivos contendo os "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" de nossa aplicação ficarão dentro deste diretório."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Então criamos um arquivo chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns_data.clj"]}]},{"tag":"text","content":[", com o sinal de "]},{"tag":"italic","content":[{"tag":"text","content":["underscore"]}]},{"tag":"text","content":[" ao invés de um hífen, contendo o "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-data"]}]},{"tag":"text","content":[", com hífen."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Eis a pegadinha: nomes de arquivo usam "]},{"tag":"italic","content":[{"tag":"text","content":["underscore"]}]},{"tag":"text","content":[", enquanto "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" usam hífen. Se você se confundir e trocar, a aplicação não vai compilar."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Caso você nomeie o arquivo como "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-data.clj"]}]},{"tag":"text","content":[", vai receber uma mensagem de erro parecida com essa:"]},{"tag":"br","content":null}]},{"tag":"code","content":[{"tag":"br","content":null},{"tag":"code-text","content":["Exception in thread \"main\" java.io.FileNotFoundException: "]},{"tag":"br","content":null},{"tag":"code-text","content":["Could not locate cljhelp/ns_data__init.class or "]},{"tag":"br","content":null},{"tag":"code-text","content":["cljhelp/ns_data.clj on classpath: , compiling:(cljhelp/core.clj:"]},{"tag":"br","content":null},{"tag":"code-text","content":["1:1)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que o próprio Clojure dá a dica do nome do arquivo que está sendo esperado e não foi encontrado."]},{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["Não tenha medo de ler as mensagens de erro"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Quando você estiver usando a linguagem na selva de um projeto real, com toda aquela pressão aumentando e o tempo acabando, elas podem ser suas únicas amigas."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Isso serve não só para o Clojure, mas para qualquer outra ferramenta que você use."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos escrever o código no "]},{"tag":"italic","content":[{"tag":"text","content":["REPL"]}]},{"tag":"text","content":[" para testar passo a passo o que nossa função de extração de documentação faz."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["ns-publics"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos começar usando a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-publics"]}]},{"tag":"text","content":[" para extrair todos os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" públicos de um determinado "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[". O "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" deve ser passado usando o operador "]},{"tag":"italic","content":[{"tag":"text","content":["quote"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns-publics 'clojure.core)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; {primitives-classnames #'clojure.core/primitives-classnames, "]},{"tag":"br","content":null},{"tag":"code-text","content":["; +' #'clojure.core/+', decimal? #'clojure.core/decimal?, "]},{"tag":"br","content":null},{"tag":"code-text","content":["; restart-agent #'clojure.core/restart-agent,"]},{"tag":"br","content":null},{"tag":"code-text","content":["; ... vários outros membros ..."]},{"tag":"br","content":null},{"tag":"code-text","content":["; refer-clojure #'clojure.core/refer-clojure}"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Perceba que "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-publics"]}]},{"tag":"text","content":[" nos retornou um "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" contendo pares de símbolos e "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos nos aproveitar disso e utilizar os símbolos como identificador de registro no nosso banco de dados, e também para acessar os "]},{"tag":"italic","content":[{"tag":"text","content":["vars"]}]},{"tag":"text","content":[" retornados por "]},{"tag":"monospaced","content":[{"tag":"text","content":["ns-publics"]}]},{"tag":"text","content":[". Para extrair as chaves de cada par chave-valor, vamos usar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["keys"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(let [vars (ns-publics 'clojure.core)"]},{"tag":"br","content":null},{"tag":"code-text","content":["      ks   (keys vars)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  ks)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; (primitives-classnames +' decimal? restart-agent sort-by macro"]},{"tag":"br","content":null},{"tag":"code-text","content":["; ... centenas de itens ..."]},{"tag":"br","content":null},{"tag":"code-text","content":["; fnext denominator bytes refer-clojure)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora temos uma lista com centenas de símbolos em "]},{"tag":"monospaced","content":[{"tag":"text","content":["ks"]}]},{"tag":"text","content":[". Cada símbolo equivale ao nome do "]},{"tag":"italic","content":[{"tag":"text","content":["var"]}]},{"tag":"text","content":[" contido em "]},{"tag":"monospaced","content":[{"tag":"text","content":["clojure.core"]}]},{"tag":"text","content":[" e vai servir como item a ser pesquisado quando o usuário quiser ler a documentação de qualquer função desse "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos agora utilizar "]},{"tag":"monospaced","content":[{"tag":"text","content":["for"]}]},{"tag":"text","content":[" para retornarmos uma "]},{"tag":"italic","content":[{"tag":"text","content":["lazy sequence"]}]},{"tag":"text","content":[" que vai conter "]},{"tag":"italic","content":[{"tag":"text","content":["hashmaps"]}]},{"tag":"text","content":[" formados por "]},{"tag":"monospaced","content":[{"tag":"text","content":[":id"]}]},{"tag":"text","content":[", que será o identificador do registro, e "]},{"tag":"monospaced","content":[{"tag":"text","content":[":doc"]}]},{"tag":"text","content":[", que vai armazenar o texto contendo a documentação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos guardar esse código dentro de uma função chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["extract-doc"]}]},{"tag":"text","content":[", que vai justamente extrair a documentação."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn extract-doc []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (let [vars (ns-publics 'clojure.core)"]},{"tag":"br","content":null},{"tag":"code-text","content":["        ks   (keys vars)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (for [k ks]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      {:id  k,"]},{"tag":"br","content":null},{"tag":"code-text","content":["       :doc (:doc (meta (k vars)))})))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Esse será todo o código do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp.ns-data"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Um banco de dados simplificado"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos agora criar um arquivo chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["db.clj"]}]},{"tag":"text","content":[" no diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/cljhelp"]}]},{"tag":"text","content":[". Vamos chamar esse "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" de "]},{"tag":"monospaced","content":[{"tag":"text","content":["cljhelp.db"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar três funções nesse "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[". Uma para inserir os dados, que vamos chamar de "]},{"tag":"monospaced","content":[{"tag":"text","content":["insert!"]}]},{"tag":"text","content":[", uma para contar a quantidade de registros, que vamos chamar de "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" e uma para pesquisar a informação que queremos, que vamos chamar de "]},{"tag":"monospaced","content":[{"tag":"text","content":["search"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como já existe uma função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" na biblioteca padrão do Clojure, vamos ter que dizer ao nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" para ignorar a função padrão, e para isso vamos usar o nosso já conhecido "]},{"tag":"monospaced","content":[{"tag":"text","content":[":refer-clojure"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns cljhelp.db"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:refer-clojure :exclude [count]))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar um membro privado chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["data"]}]},{"tag":"text","content":[", que vai conter um "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" encapsulado por uma estrutura chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Um "]},{"tag":"monospaced","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" é uma estrutura que assegura que a informação seja alterada de forma atômica e segura, ou seja, ou toda a alteração é feita e concluída, ou toda a alteração é descartada. "]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ela nos permite também que os dados não sejam corrompidos quando duas "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":[" tentarem ler ou alterar os dados ao mesmo tempo."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(def ^:private data (atom {}))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"box","content":[{"tag":"text","content":["Devagar e sempre"]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Veremos com toda a calma e tranquilidade sobre como manipular dados em ambientes concorrentes, quando duas ou mais "]},{"tag":"italic","content":[{"tag":"text","content":["threads"]}]},{"tag":"text","content":[" estão acessando a mesma informação, no capítulo "]},{"tag":"ref-label","content":[{"tag":"text","content":["capitulo-concorrencia"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Não se preocupe em entender agora como um "]},{"tag":"monospaced","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" funciona, e não se sinta perdido quanto a isso. Vamos chegar lá."]},{"tag":"br","content":null}]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["insert!"]}]},{"tag":"text","content":[", como o nome diz, insere um registro em nosso banco improvisado, recebendo como parâmetro um dos itens da "]},{"tag":"italic","content":[{"tag":"text","content":["lazy sequence"]}]},{"tag":"text","content":[" gerada por "]},{"tag":"monospaced","content":[{"tag":"text","content":["extract-doc"]}]},{"tag":"text","content":[". Vamos utilizar "]},{"tag":"italic","content":[{"tag":"text","content":["destructuring"]}]},{"tag":"text","content":[", que já vimos no capítulo "]},{"tag":"ref-label","content":[{"tag":"text","content":["capitulo-funcoes"]}]},{"tag":"text","content":[" para separar os membros do "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" em dois "]},{"tag":"italic","content":[{"tag":"text","content":["bindings"]}]},{"tag":"text","content":[" locais."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que o nome da função termina com um ponto de exclamação. Isso porque estamos alterando um estado global, presente no "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["data"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para inserir o registro no nosso "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[", vamos usar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["swap!"]}]},{"tag":"text","content":[". Note que ela também termina com um ponto de exclamação, justamente por alterar um valor global."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["swap!"]}]},{"tag":"text","content":[" pode parecer confusa num primeiro momento, mas não se preocupe com isso agora. Ela recebe como parâmetros o "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" a ser modificado, a função a ser aplicada no "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" contido no "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" e os parâmetros que essa função deve receber."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como vamos associar um novo item ao "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[", vamos utilizar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["assoc"]}]},{"tag":"text","content":[", passando os valores de "]},{"tag":"monospaced","content":[{"tag":"text","content":["id"]}]},{"tag":"text","content":[" e "]},{"tag":"monospaced","content":[{"tag":"text","content":["doc"]}]},{"tag":"text","content":[" como parâmetros."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Depois de toda essa conversa, nossa função vai ter essa cara:"]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["swap!"]}]},{"tag":"index","content":[{"tag":"text","content":["assoc"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn insert! [{id :id doc :doc}]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (swap! data assoc id doc))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para contar a quantidade de itens em uma coleção não tem segredo. Vamos usar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" da biblioteca padrão."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Como dissemos para nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" ignorar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" padrão, teremos que invocá-la usando o nome qualificado."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Se você tentar executar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" diretamente no "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[", vai receber uma mensagem de erro:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(count data)"]},{"tag":"br","content":null},{"tag":"code-text","content":["; UnsupportedOperationException count not supported on this type"]},{"tag":"br","content":null},{"tag":"code-text","content":["; Atom"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Lembre-se que foi dito que o "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[" encapsula o "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[", então não podemos contar a quantidade de itens de um "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[", mas sim da estrutura de dados que está contido nele."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["@"]}]},{"tag":"index","content":[{"tag":"text","content":["deref"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para isso, vamos usar o operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["@"]}]},{"tag":"text","content":[", conhecido como "]},{"tag":"monospaced","content":[{"tag":"text","content":["deref"]}]},{"tag":"text","content":[", que de maneira segura retorna o valor que está contido no "]},{"tag":"italic","content":[{"tag":"text","content":["atom"]}]},{"tag":"text","content":[". Note que usaremos "]},{"tag":"monospaced","content":[{"tag":"text","content":["@"]}]},{"tag":"text","content":[" toda vez que quisermos acessar o valor do "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" que está em "]},{"tag":"monospaced","content":[{"tag":"text","content":["data"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Fechando nossa função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[", teremos o seguinte código:"]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn count []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (clojure.core/count @data))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Uma lida mais atenta vai levantar a seguinte pergunta: "]},{"tag":"italic","content":[{"tag":"text","content":["mas se a nossa função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" apenas invoca a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" padrão da linguagem, por que não usar diretamente a "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" padrão na nossa aplicação?"]}]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Simples, caro gafanhoto. Para usarmos a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["count"]}]},{"tag":"text","content":[" padrão, precisaríamos ter acesso a "]},{"tag":"monospaced","content":[{"tag":"text","content":["data"]}]},{"tag":"text","content":[", que não poderia ter sido declarado como privado. Isso abriria espaço para que o nosso banco de dados fosse manipulado por fora de nossas funções, rompendo o encapsulamento dos dados."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Não estou dizendo aqui que dessa forma seria pior do que a que estou apresentando, mas sim que isso é uma escolha de "]},{"tag":"italic","content":[{"tag":"text","content":["design"]}]},{"tag":"text","content":[" da aplicação. Ao desenvolver suas aplicações, considere os prós e contras de cada maneira de implementar, de acordo com as necessidades do projeto e a experiência profissional da sua equipe."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["search"]}]},{"tag":"text","content":[" não tem segredo algum. Como o item a ser pesquisado é um "]},{"tag":"italic","content":[{"tag":"text","content":["symbol"]}]},{"tag":"text","content":[" e o parâmetros que vamos receber é do tipo "]},{"tag":"italic","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[", basta converter de um tipo para outro e utilizar o próprio retorno de valor do "]},{"tag":"italic","content":[{"tag":"text","content":["hashmap"]}]},{"tag":"text","content":[" para termos o texto da documentação em mãos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn search [item]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (@data (symbol item)))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nosso trabalho com os dados acabou por aqui. Agora vamos dar uma olhada rápida na interface com o usuário."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["A interface com o usuário"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Nossa interface com o usuário vai ser a mais simples possível. Você pode ficar a vontade para incrementá-la ou mesmo adicionar uma interface gráfica."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["No diretório "]},{"tag":"monospaced","content":[{"tag":"text","content":["src/cljhelp"]}]},{"tag":"text","content":[", vamos criar um arquivo chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["ui.clj"]}]},{"tag":"text","content":[", onde criaremos nosso "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" "]},{"tag":"monospaced","content":[{"tag":"text","content":["ui"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"text","content":[" label=\"ui\""]},{"tag":"br","content":null},{"tag":"code-text","content":["(ns cljhelp.ui)"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos começar com uma função simples, que limpa a tela. É uma prática interessante para não deixar os dados todos amontoados na tela."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para limpar a tela, vamos imprimir cem linhas em branco, empurrando o texto anterior para fora da parte visível. Podem ser duzentas, ou podem ser cinquenta, ficando a seu critério."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn- clear-screen []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (doseq [x (range 100)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (println)))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos precisar de uma tela inicial, com menu, para que o usuário possa escolher se quer pesquisar a documentação de uma função ou sair da aplicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos manter duas opções: "]},{"tag":"italic","content":[{"tag":"text","content":["1"]}]},{"tag":"text","content":[" para pesquisar e "]},{"tag":"italic","content":[{"tag":"text","content":["2"]}]},{"tag":"text","content":[" para sair."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn menu []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (clear-screen)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Menu principal\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"==============\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"[1] Pesquisar \")"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"[2] Sair      \"))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos escrever mais duas telas: uma para inserirmos a informação a ser pesquisa e outra que exibe o resultado."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["print"]}]},{"tag":"index","content":[{"tag":"text","content":["println"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que na última linha da função de pesquisa, que vamos chamar de "]},{"tag":"monospaced","content":[{"tag":"text","content":["search"]}]},{"tag":"text","content":[", estamos usando "]},{"tag":"monospaced","content":[{"tag":"text","content":["print"]}]},{"tag":"text","content":[" ao invés de "]},{"tag":"monospaced","content":[{"tag":"text","content":["println"]}]},{"tag":"text","content":[". Isso vai fazer com que o cursor permaneça na mesma linha do texto "]},{"tag":"monospaced","content":[{"tag":"text","content":["Operador: "]}]},{"tag":"text","content":[". A função "]},{"tag":"monospaced","content":[{"tag":"text","content":["println"]}]},{"tag":"text","content":[" faria o cursor pular para a linha seguinte."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn search []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (clear-screen)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Pesquisar\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"==============\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (print \"Operador: \"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["(defn result [result]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println result))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["E temos todas as nossas telas concluídas. Vamos agora escrever o código do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" principal, que junta todas as partes e faz a aplicação funcionar."]},{"tag":"br","content":null}]},{"tag":"title","content":[{"tag":"text","content":["Juntando tudo e executando"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Já existe um arquivo chamado "]},{"tag":"monospaced","content":[{"tag":"text","content":["core.clj"]}]},{"tag":"text","content":[" na nossa aplicação. Ele foi criado pelo próprio "]},{"tag":"italic","content":[{"tag":"text","content":["Leiningen"]}]},{"tag":"text","content":[" ao criarmos o projeto."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Apague a função "]},{"tag":"italic","content":[{"tag":"text","content":["-main"]}]},{"tag":"text","content":[" e substitua a declaração do "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" pelo código abaixo, onde referenciamos os três "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" que acabamos de criar."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(ns cljhelp.core"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (:require [cljhelp.ns-data :as data]"]},{"tag":"br","content":null},{"tag":"code-text","content":["            [cljhelp.db      :as db]"]},{"tag":"br","content":null},{"tag":"code-text","content":["            [cljhelp.ui      :as ui]))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar uma função privada chamada "]},{"tag":"monospaced","content":[{"tag":"text","content":["load-data"]}]},{"tag":"text","content":[", que vai carregar os dados usando a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["extract-doc"]}]},{"tag":"text","content":[" de um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" e inserir no banco de dados usando a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["insert!"]}]},{"tag":"text","content":[" de outro "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A "]},{"tag":"italic","content":[{"tag":"text","content":["lazy sequence"]}]},{"tag":"text","content":[" retornada por "]},{"tag":"monospaced","content":[{"tag":"text","content":["extract-doc"]}]},{"tag":"text","content":[" é processada item a item através do operador "]},{"tag":"monospaced","content":[{"tag":"text","content":["doseq"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Após completar a inclusão dos dados, vamos exibir a quantidade de registros inseridos."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn- load-data []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (doseq [v (data/extract-doc)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (db/insert! v))"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (println \"Adicionados\" (db/count) \"itens\"))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["read-line"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Vamos criar uma função "]},{"tag":"monospaced","content":[{"tag":"text","content":["search"]}]},{"tag":"text","content":[", também privada, que lê a opção do usuário através da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["read-line"]}]},{"tag":"text","content":[", pesquisa no banco a documentação do operador desejado e exibe as informações na tela. "]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que "]},{"tag":"monospaced","content":[{"tag":"text","content":["read-line"]}]},{"tag":"text","content":[" retorna um valor do tipo "]},{"tag":"monospaced","content":[{"tag":"text","content":["String"]}]},{"tag":"text","content":[", e por isso fizemos a conversão para "]},{"tag":"monospaced","content":[{"tag":"text","content":["Symbol"]}]},{"tag":"text","content":[" dentro da função "]},{"tag":"monospaced","content":[{"tag":"text","content":["search"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Você poderia também fazer com que "]},{"tag":"monospaced","content":[{"tag":"text","content":["search"]}]},{"tag":"text","content":[" recebesse diretamente um "]},{"tag":"monospaced","content":[{"tag":"text","content":["Symbol"]}]},{"tag":"text","content":[", deixando a conversão a cargo de quem for chamar a função."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Novamente é uma escolha de design da aplicação e fica a seu critério e da sua equipe."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn- search []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (ui/search)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (let [operator (read-line)"]},{"tag":"br","content":null},{"tag":"code-text","content":["        doc      (db/search operator)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (ui/result doc)))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Agora precisamos criar a função que invoca o menu e trata a opção escolhida pelo usuário. Vamos deixar o menu dentro de um "]},{"tag":"italic","content":[{"tag":"text","content":["loop"]}]},{"tag":"text","content":[" para que o usuário possa pesquisar quantos itens quiser sem sair da aplicação."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn- main-menu []"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (loop []"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (ui/menu)"]},{"tag":"br","content":null},{"tag":"code-text","content":["    (let [op (read-line)]"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (case op"]},{"tag":"br","content":null},{"tag":"code-text","content":["        \"1\" (search)"]},{"tag":"br","content":null},{"tag":"code-text","content":["        \"2\" (println \"Até mais\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["        :else (println \"Opção inválida\"))"]},{"tag":"br","content":null},{"tag":"code-text","content":["      (when-not (= op \"2\")"]},{"tag":"br","content":null},{"tag":"code-text","content":["        (recur)))))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Encerrando nossa aplicação, vamos implementar a função "]},{"tag":"monospaced","content":[{"tag":"text","content":["-main"]}]},{"tag":"text","content":[" que, como já vimos, é o ponto inicial da aplicação."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["O código que restou é bem simples: carregamos os dados em nosso banco e invocamos o menu principal para que o usuário escolha o que fazer."]},{"tag":"br","content":null}]},{"tag":"code","content":["clojure",{"tag":"br","content":null},{"tag":"code-text","content":["(defn -main [& args]"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (load-data)"]},{"tag":"br","content":null},{"tag":"code-text","content":["  (main-menu))"]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Para executar a aplicação, digite "]},{"tag":"monospaced","content":[{"tag":"text","content":["lein run"]}]},{"tag":"text","content":[" no terminal, dentro do diretório raiz da aplicação, que é onde está o arquivo "]},{"tag":"monospaced","content":[{"tag":"text","content":["project.clj"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["A maneira como a aplicação foi modelada permite que você substitua nosso banco de dados improvisado por um banco de dados de verdade sem mexer em mais de um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":["."]},{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Martin, Robert"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Princípios SOLID"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"index","content":[{"tag":"text","content":["Single responsibility principle"]}]},{"tag":"paragraph","content":[{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Note que a maioria dos princípios "]},{"tag":"italic","content":[{"tag":"text","content":["SOLID"]}]},{"tag":"text","content":[", de Robert Martin"]},{"tag":"ref","content":[{"tag":"text","content":["uncle-bob"]}]},{"tag":"text","content":[", também se aplicam à programação funcional. Aqui, por exemplo, utilizamos o "]},{"tag":"italic","content":[{"tag":"text","content":["Single responsibility principle"]}]},{"tag":"ref","content":[{"tag":"text","content":["uncle-bob-srp"]}]},{"tag":"text","content":[" que, adaptando ao nosso contexto, diz que função, classe ou "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" deve definir uma única responsabilidade e ter apenas um motivo para ser alterado. Na prática isso significa que cada função deve fazer bem uma e somente uma coisa, e que os "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" devem agregar as funções que cuidem de uma mesma responsabilidade."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["É por isso que temos um "]},{"tag":"italic","content":[{"tag":"text","content":["namespace"]}]},{"tag":"text","content":[" só para a interface com o usuário, outra só para o banco de dados e uma, com apenas uma função, que trata somente da extração das informações."]},{"tag":"br","content":null}]},{"tag":"paragraph","content":[{"tag":"text","content":["Ao contrário do que possa parecer, as boas práticas utilizadas na Programação Orientada a Objetos e na Programação Funcional não são tão diferentes entre si. Código limpo é sempre bem vindo não importando o paradigma que você esteja utilizando, e "]},{"tag":"italic","content":[{"tag":"text","content":["namespaces"]}]},{"tag":"text","content":[" são uma boa ferramenta para chegarmos a esse objetivo."]}]}]}